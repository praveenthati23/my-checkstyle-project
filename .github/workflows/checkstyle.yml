name: Checkstyle Code Analysis

on:
  pull_request:
    branches:
      - dev

jobs:
  run-checkstyle:
    name: Run Checkstyle on PR to dev
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run Checkstyle (Fail on violations)
        run: mvn --batch-mode checkstyle:checkstyle

      - name: Parse Checkstyle Summary (even if previous step failed)
        if: always()
        id: checkstyle-summary
        run: |
          CHECKSTYLE_ERRORS=0
          CHECKSTYLE_FILES=0

          if [ -f target/checkstyle-result.xml ]; then
            CHECKSTYLE_ERRORS=$(grep -c '<error ' target/checkstyle-result.xml || true)
            CHECKSTYLE_FILES=$(grep -c '<file ' target/checkstyle-result.xml || true)
          fi

          SUMMARY="## 🎯 Checkstyle Report\n\n"
          if [ "$CHECKSTYLE_ERRORS" -eq "0" ]; then
            SUMMARY+="✅ No Checkstyle issues found.\n\n"
          else
            SUMMARY+="❌ **$CHECKSTYLE_ERRORS issues** found across **$CHECKSTYLE_FILES files**.\n\n"
            SUMMARY+="<details><summary>📄 File-level Breakdown</summary>\n\n"

            while IFS= read -r line; do
              file_path=$(echo "$line" | sed -n 's/.*<file name="\([^"]*\)".*/\1/p')
              clean_path="${file_path#$GITHUB_WORKSPACE/}"
              error_count=$(awk -v path="$file_path" '
                $0 ~ "<file name=\""path"\"" {f=1; next}
                f && $0 ~ "</file>" {f=0}
                f && $0 ~ "<error " {c++}
                END {print c+0}
              ' target/checkstyle-result.xml)
              if [ "$error_count" -gt 0 ]; then
                SUMMARY+="\`${clean_path} - ${error_count} issues\`\n"
              fi
            done < <(grep '<file name=' target/checkstyle-result.xml)

            SUMMARY+="</details>\n"
          fi

          REPORT_LINK="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          SUMMARY+="📥 [View full Checkstyle report]($REPORT_LINK)\n\n"

          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload Checkstyle HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: target/site/checkstyle.html

      - name: Comment PR with Checkstyle summary
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const summary = `${{ steps.checkstyle-summary.outputs.summary }}`;
            const COMMENT_TAG = 'Checkstyle Report';
            const fullBody = `${COMMENT_TAG}\n\n${summary}\n\n<sub>🤖 Auto-generated by GitHub Actions</sub>`;

            const { issue: { number: issueNumber }, repo: { owner, repo } } = context;

            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: issueNumber
            });

            const existing = comments.find(c =>
              c.body.includes(COMMENT_TAG) &&
              c.user.login === 'github-actions[bot]'
            );

            if (existing) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existing.id,
                body: fullBody
              });
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: issueNumber,
                body: fullBody
              });
            }
